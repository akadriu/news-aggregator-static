{"version":3,"file":"static/js/381.c3c30e75.chunk.js","mappings":"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","sources":["components/SearchSidebar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst SearchSidebar = () => {\n  const [keyword, setKeyword] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('');\n\n  // NEW: advanced options\n  const [portal, setPortal] = useState('');\n  const [exactMatch, setExactMatch] = useState(false);\n  const [limit, setLimit] = useState(''); // keep empty = no cap\n\n  const [searchResults, setSearchResults] = useState([]);\n  const [resultCount, setResultCount] = useState(0); // show server count\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [showAdvanced, setShowAdvanced] = useState(false);\n\n  // Categories available for search (matching your navigation)\n  const categories = [\n    { value: '', label: 'Të gjitha kategoritë' },\n    { value: 'Kosovë', label: 'Kosovë' },\n    { value: 'Maqedoni', label: 'Maqedoni' },\n    { value: 'Bota', label: 'Bota' },\n    { value: 'Ekonomi', label: 'Ekonomi' },\n    { value: 'Sport', label: 'Sport' },\n    { value: 'Kulturë', label: 'Kulturë' },\n    { value: 'Kronika', label: 'Kronika' },\n    { value: 'Rozë', label: 'Rozë' }\n  ];\n\n  // Category normalization (aligns with backend)\n  const normalizeCategory = (category) => {\n    const mapping = {\n      \"Kosovë\": \"Kosovë\",\n      \"Kosove\": \"Kosovë\",\n      \"Rozë\": \"Rozë\",\n      \"Roze\": \"Rozë\",\n      \"Kulturë\": \"Kulturë\",\n      \"Kultura\": \"Kulturë\"\n    };\n    return mapping[category] || category;\n  };\n\n  // Search using the ADVANCED endpoint (works for simple searches too)\n  const runSearch = async () => {\n    if (!keyword.trim()) {\n      setSearchResults([]);\n      setResultCount(0);\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const base = process.env.REACT_APP_API_URL; // e.g. http://localhost:8000\n      const params = new URLSearchParams({\n        keyword: keyword.trim(),\n        ...(selectedCategory && { category: normalizeCategory(selectedCategory) }),\n        ...(portal.trim() && { portal: portal.trim() }),\n        ...(exactMatch ? { exact_match: 'true' } : {}),\n        ...(limit && !isNaN(Number(limit)) ? { limit: String(Number(limit)) } : {})\n      });\n\n      const response = await fetch(`${base}/api/search/advanced?${params}`);\n      if (!response.ok) throw new Error('Search failed');\n\n      const data = await response.json();\n      if (data.success) {\n        setSearchResults(data.results || []);\n        setResultCount(Number(data.count ?? (data.results || []).length));\n      } else {\n        throw new Error(data.error || 'Search failed');\n      }\n    } catch (err) {\n      setError('Gabim gjatë kërkimit. Provoni përsëri.');\n      console.error('Search error:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Debounced auto-search\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      if (keyword.trim()) runSearch();\n    }, 500);\n    return () => clearTimeout(timeoutId);\n  }, [keyword, selectedCategory, portal, exactMatch, limit]);\n\n  const handleClearSearch = () => {\n    setKeyword('');\n    setSelectedCategory('');\n    setPortal('');\n    setExactMatch(false);\n    setLimit('');\n    setSearchResults([]);\n    setResultCount(0);\n    setError(null);\n  };\n\n  return (\n    <div className=\"search-sidebar\">\n      <div className=\"search-container\">\n        <h4>Kërko Lajmet e Fundit</h4>\n\n        {/* Keyword */}\n        <div className=\"search-field\">\n          <input\n            type=\"text\"\n            placeholder=\"Shkruani fjalën kyçe...\"\n            value={keyword}\n            onChange={(e) => setKeyword(e.target.value)}\n            className=\"search-input\"\n          />\n        </div>\n\n        {/* Category */}\n        <div className=\"search-field\">\n          <select\n            value={selectedCategory}\n            onChange={(e) => setSelectedCategory(e.target.value)}\n            className=\"search-select\"\n          >\n            {categories.map(cat => (\n              <option key={cat.value} value={cat.value}>\n                {cat.label}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* Advanced toggle */}\n        <button\n          type=\"button\"\n          className=\"clear-btn\"\n          onClick={() => setShowAdvanced(v => !v)}\n          style={{ marginBottom: 8 }}\n        >\n          {showAdvanced ? 'Mbyll Opsionet e Avancuara' : 'Opsionet e Avancuara'}\n        </button>\n\n        {/* Advanced options */}\n        {showAdvanced && (\n          <div className=\"advanced-box\" style={{ marginBottom: 8 }}>\n            <div className=\"search-field\">\n              <input\n                type=\"text\"\n                placeholder=\"Portal (p.sh. Gazeta Express)\"\n                value={portal}\n                onChange={(e) => setPortal(e.target.value)}\n                className=\"search-input\"\n              />\n            </div>\n            {/*\n            <div className=\"search-field\" style={{ display: 'flex', alignItems: 'center', gap: 8 }}>\n              <input\n                id=\"exactMatch\"\n                type=\"checkbox\"\n                checked={exactMatch}\n                onChange={(e) => setExactMatch(e.target.checked)}\n              />\n              <label htmlFor=\"exactMatch\">Kërkim i saktë (exact match)</label>\n            </div>\n            */}\n            <div className=\"search-field\">\n              <input\n                type=\"number\"\n                min=\"1\"\n                placeholder=\"Limit (opsionale)\"\n                value={limit}\n                onChange={(e) => setLimit(e.target.value)}\n                className=\"search-input\"\n              />\n            </div>\n          </div>\n        )}\n\n        {/* Clear */}\n        {(keyword || selectedCategory || portal || exactMatch || limit) && (\n          <button onClick={handleClearSearch} className=\"clear-btn\">Pastro</button>\n        )}\n\n        {/* Loading */}\n        {isLoading && <div className=\"search-loading\">Kërkoj...</div>}\n\n        {/* Error */}\n        {error && <div className=\"search-error\">{error}</div>}\n\n        {/* Results */}\n        <div className=\"search-results\">\n          {resultCount > 0 && (\n            <>\n              <div className=\"results-header\">Gjetur {resultCount} rezultate</div>\n              {searchResults.map((result, index) => (\n                <div key={index} className=\"search-result-item\">\n                  <a href={result.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"result-link\">\n                    <div className=\"result-title\">{result.title}</div>\n                    <div className=\"result-portal\">{result.portal}</div>\n                    {result.summary && (\n                      <div className=\"result-summary\">\n                        {result.summary.substring(0, 150)}...\n                      </div>\n                    )}\n                  </a>\n                </div>\n              ))}\n            </>\n          )}\n\n          {keyword.trim() && !isLoading && resultCount === 0 && !error && (\n            <div className=\"no-results\">\n              Nuk u gjetën rezultate për \"{keyword}\"\n              {selectedCategory && ` në kategorinë \"${selectedCategory}\"`}\n              {portal && ` nga portali \"${portal}\"`}\n              {exactMatch && ' (kërkim i saktë)'}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchSidebar;\n"],"names":["SearchSidebar","keyword","setKeyword","useState","selectedCategory","setSelectedCategory","portal","setPortal","exactMatch","setExactMatch","limit","setLimit","searchResults","setSearchResults","resultCount","setResultCount","isLoading","setIsLoading","error","setError","showAdvanced","setShowAdvanced","useEffect","timeoutId","setTimeout","trim","async","base","process","params","URLSearchParams","category","exact_match","isNaN","Number","String","response","fetch","concat","ok","Error","data","json","success","_data$count","results","count","length","err","console","runSearch","clearTimeout","_jsx","className","children","_jsxs","type","placeholder","value","onChange","e","target","label","map","cat","onClick","v","style","marginBottom","min","handleClearSearch","_Fragment","result","index","href","link","rel","title","summary","substring"],"sourceRoot":""}