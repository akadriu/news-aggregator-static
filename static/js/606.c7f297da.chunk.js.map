{"version":3,"file":"static/js/606.c7f297da.chunk.js","mappings":"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","sources":["components/CategoryPage.js","utils/timeUtils.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { timeDifference } from '../utils/timeUtils';\nimport { Link } from 'react-router-dom';\n\nconst CategoryPage = () => {\n    const { category } = useParams();\n    const navigate = useNavigate();\n    const [clusters, setClusters] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        setLoading(true);\n        setError(null);\n        setClusters([]);\n        \n        axios.get(`${process.env.REACT_APP_API_URL}/category/${category}`)\n            .then(response => {\n                if (response.data && typeof response.data === 'object') {\n                    const sortedClusters = Object.entries(response.data);\n                    setClusters(sortedClusters);\n                } else {\n                    setClusters([]);\n                }\n                setLoading(false);\n            })\n            .catch(error => {\n                console.error(`Error fetching data for category ${category}:`, error);\n                setError(error);\n                setLoading(false);\n                \n                if (error.response && error.response.status === 404) {\n                    setTimeout(() => {\n                        navigate('/');\n                    }, 3000);\n                }\n            });\n    }, [category, navigate]);\n\n    const limitSummary = (summary) => {\n        if (!summary) return '';\n        return summary.split(' ').slice(0, 40).join(' ') + '...';\n    };\n    \n    // Show ONLY loading message - no category title, no other content\n    if (loading) {\n        return (\n            <div className=\"loading-container\">\n                <p> </p>\n            </div>\n        );\n    }\n    \n    if (error) {\n        return (\n            <div className=\"error-container\">\n                <h2>Kategoria nuk u gjet</h2>\n                <p>Kategoria \"{category}\" nuk është e disponueshme. Do të ridrejtoheni në faqen kryesore pas disa sekondash...</p>\n                <p>\n                    <a href=\"/\" onClick={(e) => {\n                        e.preventDefault();\n                        navigate('/');\n                    }}>\n                        Klikoni këtu për t'u kthyer tani\n                    </a>\n                </p>\n            </div>\n        );\n    }\n\n    if (clusters.length === 0) {\n        return (\n            <div className=\"category-page\">\n                <h1>{category}</h1>\n                <p>Nuk ka grupe lajmesh të disponueshme në këtë kategori për momentin.</p>\n                <Link to=\"/\">← Kthehu në Kryefaqe</Link>\n            </div>\n        );\n    }\n\n    // Show everything together - category title AND content\n    return (\n        <div className=\"category-page\">\n            <h1>{category}</h1>\n            <ul>\n                {clusters.map(([clusterId, clusterData]) => {\n                    if (!clusterData || !clusterData.articles || clusterData.articles.length === 0) {\n                        return null;\n                    }\n\n                    const firstArticle = clusterData.articles[0];\n                    \n                    return (\n                        <li key={clusterId} className=\"news-cluster\">\n                            <div className=\"cluster-header\">\n                                {firstArticle.image_url && (\n                                    <img \n                                        src={firstArticle.image_url} \n                                        referrerPolicy=\"no-referrer\" \n                                        alt=\"\" \n                                        className=\"article-image\" \n                                        onError={(e) => { e.target.src = \"/fallback.jpg\"; }} \n                                    />\n                                )}\n                                <div className=\"article-details\">\n                                    <a href={firstArticle.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                                        <h3 className=\"article-title\">{firstArticle.title} - {firstArticle.portal}</h3>\n                                    </a>\n                                    <p className=\"time-portal\">{`${timeDifference(firstArticle.fetch_date)} - ${firstArticle.portal}`}</p>\n                                    <p>{limitSummary(firstArticle.summary)}</p>\n                                </div>\n                            </div>\n                            <div className=\"links-column\">\n                                {clusterData.articles.slice(1, 3).map(article => (\n                                    <a key={article.link} href={article.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"portal-link separate-link\">\n                                        {article.title} - {article.portal}\n                                    </a>\n                                ))}\n                            </div>\n                            <div className=\"links-row\">\n                                {clusterData.articles.slice(5, 10).map(article => (\n                                    <a key={article.link} href={article.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"portal-link\">\n                                        {article.portal}\n                                    </a>\n                                ))}\n                                {clusterData.articles.length > 10 && <span>...</span>}\n                                {clusterData.articles.length >= 4 && (\n                                    <Link to={`/category/${category}/cluster/${clusterId}`} className=\"view-all-link\">\n                                        Te gjitha lajmet\n                                    </Link>\n                                )}\n                            </div>\n                        </li>\n                    );\n                })}\n            </ul>\n        </div>\n    );\n};\n\nexport default CategoryPage;","export const timeDifference = (fetchDate) => {\n    const now = new Date();\n    \n    // Your Python sends: \"2025-09-27T18:10:13\" (local time format)\n    // JavaScript will interpret this as local time, which is correct\n    const fetchTime = new Date(\n         fetchDate.replace(\" \", \"T\") + (fetchDate.endsWith(\"Z\") ? \"\" : \"Z\")\n    );\n    \n    const diffInMinutes = Math.floor((now - fetchTime) / (1000 * 60));\n\n    // Debug logging (remove after testing)\n    console.log(`Now: ${now.toLocaleString()}`);\n    console.log(`Fetch: ${fetchTime.toLocaleString()}`);\n    console.log(`Diff: ${diffInMinutes} minutes`);\n\n    if (diffInMinutes < 11) {\n        return \"Tani\";\n    } else if (diffInMinutes < 60) {\n        return `Para ${diffInMinutes} minutash`;\n    } else if (diffInMinutes < 24 * 60) {\n        const diffInHours = Math.floor(diffInMinutes / 60);\n        return `Para ${diffInHours} ore`;\n    } else {\n        const diffInDays = Math.floor(diffInMinutes / (24 * 60));\n        return `Para ${diffInDays} dite`;\n    }\n};"],"names":["CategoryPage","category","useParams","navigate","useNavigate","clusters","setClusters","useState","loading","setLoading","error","setError","useEffect","axios","get","concat","process","then","response","data","sortedClusters","Object","entries","catch","console","status","setTimeout","_jsx","className","children","_jsxs","href","onClick","e","preventDefault","length","Link","to","map","_ref","clusterId","clusterData","articles","firstArticle","image_url","src","referrerPolicy","alt","onError","target","link","rel","title","portal","timeDifference","fetch_date","summary","split","slice","join","article","fetchDate","now","Date","fetchTime","replace","endsWith","diffInMinutes","Math","floor","log","toLocaleString","diffInHours","diffInDays"],"sourceRoot":""}