{"version":3,"file":"static/js/821.0235bc06.chunk.js","mappings":"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","sources":["components/CategoryList.js","utils/timeUtils.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { timeDifference } from '../utils/timeUtils';\n\nconst CategoryList = () => {\n    const [categories, setCategories] = useState([]);\n    const [categoryData, setCategoryData] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [loadingProgress, setLoadingProgress] = useState(0);\n\n    useEffect(() => {\n        console.log('Fetching categories...');\n        axios.get(`${process.env.REACT_APP_API_URL}/categories`)\n            .then(response => {\n                console.log('Categories fetched:', response.data);\n                setCategories(response.data);\n                fetchAllCategoryData(response.data);\n            })\n            .catch(error => {\n                console.error('Error fetching categories:', error);\n                setLoading(false);\n            });\n    }, []);\n\n    const fetchAllCategoryData = async (categoryList) => {\n        const categoryDataMap = {};\n        let completed = 0;\n\n        // Fetch all categories simultaneously\n        const promises = categoryList.map(async (category) => {\n            try {\n                const response = await axios.get(`${process.env.REACT_APP_API_URL}/category/${category}`);\n                const sortedClusters = Object.entries(response.data).slice(0, 3);\n                categoryDataMap[category] = sortedClusters;\n                \n                completed++;\n                setLoadingProgress(Math.round((completed / categoryList.length) * 100));\n                \n                return { category, data: sortedClusters };\n            } catch (error) {\n                console.error(`Error fetching data for category ${category}:`, error);\n                categoryDataMap[category] = [];\n                completed++;\n                setLoadingProgress(Math.round((completed / categoryList.length) * 100));\n                return { category, data: [] };\n            }\n        });\n\n        // Wait for ALL categories to complete\n        await Promise.all(promises);\n        \n        // Now set all data at once and stop loading\n        setCategoryData(categoryDataMap);\n        setLoading(false);\n    };\n\n    const limitSummary = (summary) => {\n        return summary.split(' ').slice(0, 40).join(' ') + '...';\n    };\n\n    if (loading) {\n        return (\n            <div className=\"loading-container\">\n                <div className=\"progress-bar\">\n                    <div \n                        className=\"progress-fill\" \n                        style={{ width: `${loadingProgress}%` }}\n                    ></div>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"categories\">\n            {categories.length === 0 ? (\n                <p>No categories available</p>\n            ) : (\n                categories.map(category => (\n                    <CategoryPreview \n                        key={category} \n                        category={category} \n                        topClusters={categoryData[category] || []}\n                        limitSummary={limitSummary} \n                    />\n                ))\n            )}\n        </div>\n    );\n};\n\nconst CategoryPreview = ({ category, topClusters, limitSummary }) => {\n    return (\n        <div className=\"category-preview\">\n            <h2><Link to={`/category/${category}`}>{category}</Link></h2>\n            <ul>\n                {topClusters.map(([clusterId, clusterData]) => (\n                    <li key={clusterId} className=\"news-cluster\">\n                        <div className=\"cluster-header\">\n                            {clusterData.articles[0].image_url && (\n                                <img \n                                    src={clusterData.articles[0].image_url} \n                                    referrerPolicy=\"no-referrer\" \n                                    alt=\"\" \n                                    className=\"article-image\" \n                                    onError={(e) => { e.target.src = \"/fallback.jpg\"; }} \n                                />\n                            )}\n                            <div className=\"article-details\">\n                                <a href={clusterData.articles[0].link} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <h3 className=\"article-title\">{clusterData.articles[0].title} - {clusterData.articles[0].portal}</h3>\n                                </a>\n                                <p className=\"time-portal\">{`Para ${timeDifference(clusterData.articles[0].fetch_date)} - ${clusterData.articles[0].portal}`}</p>\n                                <p>{limitSummary(clusterData.articles[0].summary)}</p>\n                            </div>\n                        </div>\n                        <div className=\"links-column\">\n                            {clusterData.articles.slice(1, 3).map(article => (\n                                <a key={article.link} href={article.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"portal-link separate-link\">\n                                    {article.title} - {article.portal}\n                                </a>\n                            ))}\n                        </div>\n                        <div className=\"links-row\">\n                            {clusterData.articles.slice(6, 10).map(article => (\n                                <a key={article.link} href={article.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"portal-link\">\n                                    {article.portal}\n                                </a>\n                            ))}\n                            {clusterData.articles.length > 10 && <span>...</span>}\n                            {clusterData.articles.length >= 4 && (\n                                <Link to={`/category/${category}/cluster/${clusterId}`} className=\"view-all-link\">\n                                    Te gjitha lajmet\n                                </Link>\n                            )}\n                        </div>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default CategoryList;","export const timeDifference = (fetchDate) => {\n    const now = new Date();\n    \n    // Your Python sends: \"2025-09-27T18:10:13\" (local time format)\n    // JavaScript will interpret this as local time, which is correct\n    const fetchTime = new Date(fetchDate);\n    \n    const diffInMinutes = Math.floor((now - fetchTime) / (1000 * 60));\n\n    // Debug logging (remove after testing)\n    console.log(`Now: ${now.toLocaleString()}`);\n    console.log(`Fetch: ${fetchTime.toLocaleString()}`);\n    console.log(`Diff: ${diffInMinutes} minutes`);\n\n    if (diffInMinutes < 0) {\n        return \"tani\";\n    } else if (diffInMinutes < 60) {\n        return `${diffInMinutes} minutash`;\n    } else if (diffInMinutes < 24 * 60) {\n        const diffInHours = Math.floor(diffInMinutes / 60);\n        return `${diffInHours} ore`;\n    } else {\n        const diffInDays = Math.floor(diffInMinutes / (24 * 60));\n        return `${diffInDays} dite`;\n    }\n};"],"names":["CategoryPreview","_ref","category","topClusters","limitSummary","_jsxs","className","children","_jsx","Link","to","concat","map","_ref2","clusterId","clusterData","articles","image_url","src","referrerPolicy","alt","onError","e","target","href","link","rel","title","portal","timeDifference","fetch_date","summary","slice","article","length","CategoryList","categories","setCategories","useState","categoryData","setCategoryData","loading","setLoading","loadingProgress","setLoadingProgress","useEffect","console","log","axios","get","process","then","response","data","fetchAllCategoryData","catch","error","async","categoryDataMap","completed","promises","categoryList","sortedClusters","Object","entries","Math","round","Promise","all","split","join","style","width","fetchDate","now","Date","fetchTime","diffInMinutes","floor","toLocaleString","diffInHours","diffInDays"],"sourceRoot":""}