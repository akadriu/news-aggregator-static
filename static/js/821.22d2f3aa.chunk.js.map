{"version":3,"file":"static/js/821.22d2f3aa.chunk.js","mappings":"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","sources":["components/CategoryList.js","utils/timeUtils.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { timeDifference } from '../utils/timeUtils';\n\nconst CategoryList = () => {\n    const [categories, setCategories] = useState([]);\n\n    useEffect(() => {\n        console.log('Fetching categories...');\n        axios.get(`${process.env.REACT_APP_API_URL}/categories`)\n            .then(response => {\n                console.log('Categories fetched:', response.data);\n                setCategories(response.data);\n            })\n            .catch(error => {\n                console.error('Error fetching categories:', error);\n            });\n    }, []);\n\n    const limitSummary = (summary) => {\n            return summary.split(' ').slice(0, 40).join(' ') + '...';\n    };\n\n    return (\n        <div className=\"categories\">\n            {categories.length === 0 ? (\n                <p>No categories available</p>\n            ) : (\n                categories.map(category => (\n                <CategoryPreview key={category} category={category} limitSummary={limitSummary} />\n                ))\n            )}\n        </div>\n\n    );\n};\n\nconst CategoryPreview = ({ category, limitSummary }) => {\n    const [topClusters, setTopClusters] = useState([]);\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_API_URL}/category/${category}`)\n            .then(response => {\n                const sortedClusters = Object.entries(response.data)\n                    .slice(0, 3);  // Take only the top 3 clusters\n                setTopClusters(sortedClusters);\n            })\n            .catch(error => {\n                console.error(`Error fetching data for category ${category}:`, error);\n            });\n    }, [category]);\n\n    return (\n        <div className=\"category-preview\">\n            <h2><Link to={`/category/${category}`}>{category}</Link></h2>\n            <ul>\n                {topClusters.map(([clusterId, clusterData]) => (\n                    <li key={clusterId} className=\"news-cluster\">\n                        <div className=\"cluster-header\">\n                            {clusterData.articles[0].image_url && (\n                                <img src={clusterData.articles[0].image_url} referrerPolicy=\"no-referrer\" alt=\"\" className=\"article-image\" onError={(e) => { e.target.src = \"/fallback.jpg\"; }} />\n                            )}\n                            <div className=\"article-details\">\n                                <a href={clusterData.articles[0].link} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <h3 className=\"article-title\">{clusterData.articles[0].title} - {clusterData.articles[0].portal}</h3>\n                                </a>\n                                <p className=\"time-portal\">{`Para ${timeDifference(clusterData.articles[0].fetch_date)} - ${clusterData.articles[0].portal}`}</p>\n                                <p>{limitSummary(clusterData.articles[0].summary)}</p>\n                            </div>\n                        </div>\n                        <div className=\"links-column\">\n                            {clusterData.articles.slice(1, 3).map(article => (  // Start from the second article\n                                <a key={article.link} href={article.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"portal-link separate-link\">\n                                    {article.title} - {article.portal}\n                                </a>\n                            ))}\n                        </div>\n                        <div className=\"links-row\">\n                            {clusterData.articles.slice(6, 10).map(article => (  // Continue with the next set of articles\n                                <a key={article.link} href={article.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"portal-link\">\n                                    {article.portal}\n                                </a>\n                            ))}\n                            {clusterData.articles.length > 10 && <span>...</span>}\n                            {clusterData.articles.length >= 4 && (<Link to={`/category/${category}/cluster/${clusterId}`} className=\"view-all-link\">Te gjitha lajmet</Link>)}\n                        </div>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default CategoryList;\n","export const timeDifference = (fetchDate) => {\n    const now = new Date();\n    const fetchTime = new Date(fetchDate);\n    const diffInMinutes = Math.floor((now - fetchTime) / (1000 * 60) - 120);\n\n    if (diffInMinutes < 60) {\n        return `${diffInMinutes} minuta`;\n    } else if (diffInMinutes < 24 * 60) {\n        const diffInHours = Math.floor(diffInMinutes / 60);\n        return `${diffInHours} ore`;\n    } else {\n        const diffInDays = Math.floor(diffInMinutes / (24 * 60));\n        return `${diffInDays} dite`;\n    }\n};\n"],"names":["CategoryPreview","_ref","category","limitSummary","topClusters","setTopClusters","useState","useEffect","axios","get","concat","process","then","response","sortedClusters","Object","entries","data","slice","catch","error","console","_jsxs","className","children","_jsx","Link","to","map","_ref2","clusterId","clusterData","articles","image_url","src","referrerPolicy","alt","onError","e","target","href","link","rel","title","portal","timeDifference","fetch_date","summary","article","length","CategoryList","categories","setCategories","log","split","join","fetchDate","now","Date","fetchTime","diffInMinutes","Math","floor","diffInHours","diffInDays"],"sourceRoot":""}